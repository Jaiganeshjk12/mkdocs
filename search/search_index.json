{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MkDocs Quickstart","text":"<p>Started template for a MkDocs docs site on GH Pages - including CI </p> <p></p> <p>Use the MkDocs (make docs) tool to create build a docs site around markdown docs.</p> <p>Follow the tutorial to add an existing project or create a project from scratch. The result will look like this project.</p>"},{"location":"#features","title":"Features","text":"<p>How to use this project</p> <ul> <li>Follow the tutorial instructions<ul> <li>Install and configure a new or existing project.</li> <li>Run it locally.</li> <li>Deploy it.</li> </ul> </li> <li>Add a copy of this project to your repos<ul> <li></li> </ul> </li> <li>View the live demo<ul> <li>This site is hosted on GitHub Pages. See if you like it. Other themes are available - see the tutorial.</li> </ul> </li> </ul> <p>The aim here is not be complete or explain all concepts. It is to provide a reference for common steps and choices needed when setting up a docs site, but still at a beginner-friendly level.</p> <p>This guide is based on the mkdocs.org tutorial.</p>"},{"location":"about-mkdocs/","title":"About MkDocs","text":""},{"location":"about-mkdocs/#what-is-mkdocs","title":"What is MkDocs?","text":"<p>The description on the MkDocs site is:</p> <p>Project documentation with Markdown.</p> <p>MkDocs is a Python tool that generates a static site based on content written in Markdown.</p> <p>If you are new to markdown, see the Getting Started page on the Markdown Guide website.</p>"},{"location":"about-mkdocs/#resources","title":"Resources","text":"<ul> <li>mkdocs.org homepage</li> <li>mkdocs/mkdocs </li> <li>MkDocs Wiki - covering themes, plugins, recipes and more.</li> <li>Release notes for MkDocs.</li> </ul>"},{"location":"about-mkdocs/#reasons-to-use-mkdocs","title":"Reasons to use MkDocs","text":"<ul> <li>Create an elegant, modern docs site for your project.</li> <li>Create a static site and serve from GitHub Pages easily.</li> <li>Low-code solution<ul> <li>No need to write HTML or learn templating syntax needed</li> <li>Use your existing markdown files as content.</li> <li>Configure with a simple YAML file.</li> </ul> </li> <li>Customizable.<ul> <li>Add custom HTML if you want.</li> <li>Plugins available.</li> <li>Flexible theme choices.</li> </ul> </li> <li>Includes search by default.</li> <li>Broken links to files (including from your navbar) will be detected at build time and shown as warnings.</li> </ul>"},{"location":"about-mkdocs/#do-i-need-to-know-python","title":"Do I need to know Python?","text":"<p>MkDocs is built in Python (like Sphinx), but you don't have to write Python code. If you set up a Deploy flow right, you don't even have to set it up locally, though then you can't preview.</p>"},{"location":"tutorial/advanced/","title":"Advanced","text":"<p>Beyond the basic configuration and content</p> <p>Once you've got the Set up Project section, you can customize further using this guide. Or skip this and go to Usage.</p>"},{"location":"tutorial/advanced/#navbar-nesting","title":"Navbar nesting","text":"<p>You can add an additional level to your navbar like this:</p> <pre><code>nav:\n  - Home: index.md\n  - About: about.md\n  - Foo:\n      - Overview: foo/index.md\n      - Bar: foo/bar.md\n</code></pre> <p>The value can either be a string (as in the first case) or a map (as in the last case). This seems to be a YAML limitation but see also issue #1139.</p>"},{"location":"tutorial/advanced/#add-config-options","title":"Add config options","text":"<p>See Configuration page on MkDocs site for options.</p>"},{"location":"tutorial/advanced/#separate-docs-directory-approach","title":"Separate docs directory approach","text":"<p>You can also structure your project to have the set up above nested inside a <code>docs</code> directory. This is useful you have a few other directories and you want to keep the project root clean.</p> <ul> <li><code>docs/</code><ul> <li><code>docs/</code><ul> <li><code>index.md</code></li> </ul> </li> <li><code>theme/</code><ul> <li><code>main.html</code></li> <li><code>nav.html</code></li> <li><code>toc.html</code></li> </ul> </li> <li><code>mkdocs.yml</code></li> </ul> </li> </ul> <p>An example of this is the Poetry repo. That  project is also how I got into MkDocs in the first place.</p>"},{"location":"tutorial/advanced/#embedding","title":"Embedding","text":"<p>To embed a gist, just copy and paste the embed script URL which is provided on a gist.</p> <p>e.g.</p> <pre><code>&lt;script src=\"https://gist.github.com/MichaelCurrin/57caae30bd7b0991098e9804a9494c23.js\"&gt;&lt;/script&gt;\n</code></pre>"},{"location":"tutorial/deploy/","title":"Deploy","text":"<p>Build and deploy to a remote public site</p> <p>See Deploying Your Docs on the Mkdocs site for more details.</p>"},{"location":"tutorial/deploy/#github-pages","title":"GitHub Pages","text":"<p>How to deploy your docs site to GitHub Pages.</p> <p>Follow one of the approaches below:</p> <ul> <li>Run deploy command - Run a MkDocs CLI command locally to deploy.</li> <li>Deploy with GitHub Actions - Use the project's CI workflow in the cloud to build and deploy to GH Pages on commits pushed to master.</li> </ul> <p>Then go to your repo's Settings and Pages then enable GitHub Pages on the <code>gh-pages</code> branch's root.</p> <p>Note this is for a Project Page on a subpath, you will have to make adjustments to the command below if you want an Organization or User Page on the root path.</p>"},{"location":"tutorial/deploy/#run-deploy-command","title":"Run deploy command","text":"<p>Run a MkDocs CLI command locally to deploy</p> <p>MkDocs needs to know where to publish commits on GitHub - so make sure you are working with a repo that you cloned, or that you initialize the local repo and add a <code>remote</code> repo.</p> <p>Run this command locally:</p> <pre><code>$ make d\n</code></pre> <p>That will use <code>Makefile</code> to run the following:</p> <pre><code>$ mkdocs gh-deploy --strict --force\n</code></pre> <p>That will do the following:</p> <ol> <li>Clean and build to <code>site</code> directory.</li> <li>Force push to <code>gh-pages</code> branch, overwriting any changes which were pushed from another build.</li> </ol> <p>Then go to your repo on GitHub, look at the Environment tab.</p> <p>When it is done building, click View deployment to see your site.</p> <p>e.g. michaelcurrin.github.io/mkdocs-quickstart/</p> <p>See deploy options in the help:</p> <pre><code>$ mkdocs gh-deploy --help\n</code></pre>"},{"location":"tutorial/deploy/#deploy-with-github-actions","title":"Deploy with GitHub Actions","text":"<p>Set up continuous deployment config to enable deploys on a change to files on GitHub</p> <p>When you make changes to your docs config or the docs directory, especially editing on GitHub directly, it's often useful to have the docs site build and deploy automatically in a remote environment. This is provided for free by GitHub.</p> <p>See the docs.yml workflow provided with this project. You don't have to change anything there. The token will be generated for you by GitHub Actions.</p>"},{"location":"tutorial/installation/","title":"Installation","text":"<p>How to install MkDocs locally.</p>"},{"location":"tutorial/installation/#requirements","title":"Requirements","text":"<ul> <li>Python 3</li> <li>Make - standard on macOS and Linux but can be installed on Windows too.</li> </ul>"},{"location":"tutorial/installation/#install-system-dependencies","title":"Install system dependencies","text":""},{"location":"tutorial/installation/#set-up-a-new-repo","title":"Set up a new repo","text":"<p>Follow the Tutorial page to set up a project from scratch.</p> <p>Or click this create your own copy of the repo.</p> <p></p> <p>Then clone your repo.</p> <p>e.g.</p> <pre><code>$ git clone git@github.com:MichaelCurrin/mkdocs-quickstart.git\n$ cd mkdocs-quickstart\n</code></pre>"},{"location":"tutorial/installation/#install-project-dependencies","title":"Install project dependencies","text":"<p>Install MkDocs locally</p> <p>For more info, see the Installation page on the MkDocs site.</p>"},{"location":"tutorial/installation/#install-in-a-virtual-environment","title":"Install in a virtual environment","text":"<p>Create a virtual environment at the project root - this is used to isolate project packages from the global packages.</p> <pre><code>$ python3 -m venv venv\n</code></pre> <p>Activate the environment.</p> <pre><code>$ source venv/bin/activate\n</code></pre> <p>Install <code>mkdocs</code> - this is covered in the project requirements file.</p> <pre><code>$ cd docs\n$ make install\n</code></pre> <p>Note - <code>mkdocs</code> 1.2 causes a break on force pushes, so this is excluded in the requirements. See issue #2447.</p>"},{"location":"tutorial/installation/#install-globally","title":"Install globally","text":"<p>If you prefer to install MkDocs once and reuse it across projects, then you can install it globally instead.</p> <p>MkDocs is available using package managers like <code>apt-get</code>, <code>homebrew</code> and <code>yum</code>.</p> <p>Or you can install like this:</p> <pre><code>$ python3 -m pip install mkdocs\n</code></pre> <p>If you get prompted for <code>sudo</code> use, then cancel and run again with <code>-U</code> flag for user-level install.</p>"},{"location":"tutorial/setup-project/","title":"Set up project","text":"<p>How to create a MkDocs site from scratch</p> <p>This is a summary of the tutorial on mkdocs.org.</p>"},{"location":"tutorial/setup-project/#how-to-use-this-guide","title":"How to use this guide","text":"<p>Use one of the approaches below:</p> <ul> <li>Create a quickstart project with the <code>new</code> command covered in Create a starter site.</li> <li>Follow the extended guide to create a Set up up docs site by hand.</li> </ul>"},{"location":"tutorial/setup-project/#basic-structure","title":"Basic structure","text":"<p>This is the simplest MkDocs site you can make:</p> <ul> <li><code>docs/</code><ul> <li><code>index.md</code> - Homepage in the <code>docs</code> directory (by default).</li> </ul> </li> <li><code>mkdocs.yml</code><ul> <li>Config at the root - control appearance and navigation of your site.</li> <li>See this project's docs/mkdocs.yml file on GitHub.</li> </ul> </li> </ul> <p>Notes on fields for the config:</p> <ul> <li><code>site_name</code> - title of your site.</li> <li><code>site_description</code> - used as a description for SEO and you could use it somewhere in your template.</li> <li><code>site_url</code> - now a required field when running a deploy. Include the subpath on the domain. If your site is not ready to be hosted, set this field to an empty string.</li> <li><code>repo_url</code> - for Edit on GitHub button. See docs.</li> <li><code>edit_uri</code> - defaults to <code>edit/master/docs/</code>, which includes <code>docs</code> directory of markdown files inside your repo root. But, if the site's root is in an outer <code>docs</code> directory, then you need to also add that, so paths do not break. e.g. <code>edit/master/docs/docs</code>. See docs</li> </ul>"},{"location":"tutorial/setup-project/#requirements-file","title":"Requirements file","text":"<p>A requirements file is optional but it can make it easier to manage dependencies. If you choose not use the file, make sure <code>pip install mkdocs</code> and <code>pip install THEME</code> lines are your instructions.</p> <p>If you want to add, then include <code>requirements.txt</code> at the root. If your project is already a Python project, you might prefer to add <code>mkdocs</code> in <code>requirements-dev.txt</code> or at <code>docs/requirements.txt</code> to keep it isolated.This file should have <code>mkdocs</code> in it and also any themes if needed.</p>"},{"location":"tutorial/setup-project/#create-a-starter-site","title":"Create a starter site","text":"<p>Run this command to create a starter site. This make the steps below go quicker.</p> <pre><code>cd my-project\nmkdocs new PATH\n</code></pre> <p>The result will be same as the Basic structure defined above and will include minimal text content generated by the MkDocs CLI. This text is defined in the project's new.py module.</p>"},{"location":"tutorial/setup-project/#set-up-a-docs-site","title":"Set up a docs site","text":"<p>Tip: Optionally use the <code>new</code> command covered above to set up the config and index page first and then continue.</p> <ol> <li>Create doc pages.<ol> <li>Create a <code>docs</code> directory.</li> <li>Create <code>index.md</code> as your homepage.</li> <li>Create other markdown pages (optional).<ul> <li>Use placeholder content if you want to move on and then come back to expand them.</li> <li>If you have any existing markdown docs, these will work too.</li> </ul> </li> </ol> </li> <li>Set up config.<ol> <li>Create <code>mkdocs.yml</code> at the project root.</li> <li>Set up a navbar there.</li> <li>Choose a theme.</li> </ol> </li> <li>Create a favicon (optional).<ul> <li>It will be picked up at this path: <code>docs/img/favicon.ico</code>.</li> </ul> </li> <li>Add to your <code>.gitignore</code>.<ul> <li>Add build directory. This will prevent it from being versioned on <code>master</code> branch.</li> <li>Add virtual environment, if using one.</li> </ul> </li> </ol> <p>You project should now look this this:</p> <ul> <li><code>docs/</code><ul> <li><code>index.md</code></li> <li>More pages...</li> </ul> </li> <li><code>mkdocs.yml</code></li> <li><code>.gitignore</code></li> <li><code>venv</code></li> <li><code>requirements.txt</code> - optional</li> </ul>"},{"location":"tutorial/setup-project/#sample-content","title":"Sample content","text":""},{"location":"tutorial/setup-project/#ignore-file","title":"Ignore file","text":"<p><code>.gitignore</code></p> <pre><code>site/\n\nvenv\n</code></pre>"},{"location":"tutorial/setup-project/#navbar","title":"Navbar","text":"<p><code>mkdocs.yml</code></p> <pre><code>nav:\n    - Home: index.md\n    - About: about.md\n</code></pre>"},{"location":"tutorial/setup-project/#themes","title":"Themes","text":""},{"location":"tutorial/setup-project/#builtin","title":"Builtin","text":"<p>Use a builtin theme that comes with MkDocs.</p> <p>The default.</p> <pre><code>theme: mkdocs\n</code></pre> <p>Using ReadTheDocs theme and alternative config syntax.</p> <pre><code>theme:\n  name: readthedocs\n</code></pre> <p>Find more supported themes. If it doesn't immediately, you'll have to use <code>pip</code> to install it and add to a <code>requirements.txt</code> file.</p>"},{"location":"tutorial/setup-project/#readthedocs-dropdown-theme","title":"ReadTheDocs Dropdown theme","text":"<p>See below using mkdocs-rtd-dropdown.</p> <p><code>requirements.txt</code>:</p> <pre><code>mkdocs-rtd-dropdown\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: 'rtd-dropdown'\n</code></pre>"},{"location":"tutorial/setup-project/#material-for-mkddocs-theme","title":"Material for MkdDocs theme","text":"<p>See the MkDocs for Material homepage. See the Set up page for config options.</p> <p><code>requirements.txt</code>:</p> <pre><code>mkdocs-material-extensions&gt;=1.0\n</code></pre> <p><code>mkdocs.yml</code>:</p> <pre><code>theme:\n  name: 'material'\n</code></pre>"},{"location":"tutorial/tldr/","title":"TL;DR","text":"<p>A simplified version of the tutorial.</p>"},{"location":"tutorial/tldr/#local-setup","title":"Local setup","text":"<ol> <li>Install<ul> <li><code>pip install mkdocs</code></li> </ul> </li> <li>Set up project<ul> <li><code>mkdocs new .</code> or </li> </ul> </li> <li>Run<ul> <li><code>mkdocs serve</code></li> </ul> </li> <li>View on localhost:8000</li> </ol>"},{"location":"tutorial/tldr/#deploy-to-remote-site","title":"Deploy to remote site","text":""},{"location":"tutorial/tldr/#run-deploy-command-locally","title":"Run deploy command locally","text":"<ol> <li>Deploy to GitHub Pages<ul> <li><code>mkdocs gh-deploy</code></li> </ul> </li> <li>View published site on GitHub Pages at <code>https://USERNAME.github.io/REPO-NAME/</code></li> </ol>"},{"location":"tutorial/tldr/#run-continuous-integration","title":"Run continuous integration","text":"<p>For CI/CD deploy, use GitHub Actions with an action such as Deploy MkDocs. Or use Netlify.</p> <p>This is not covered in this tutorial.</p>"},{"location":"tutorial/usage/","title":"Usage","text":"<p>Build and preview a site locally</p> <p>Make sure to run all commands from the <code>docs</code> directory, as that is where <code>Makefile</code> is.</p> <pre><code>$ cd docs\n</code></pre>"},{"location":"tutorial/usage/#cli-help","title":"CLI help","text":"<pre><code>$ make help\n</code></pre> <pre><code>default: install\nall: install build\nh help:\ninstall:\nupgrade:\ns serve:\nb build:\nd deploy:\n</code></pre>"},{"location":"tutorial/usage/#serve-docs","title":"Serve docs","text":"<p>This will build the docs in memory (not to disk) and serve an auto-reloading server.</p> <pre><code>$ make serve\n</code></pre> <p>Then open in your browser:</p> <ul> <li>localhost:8000</li> </ul>"},{"location":"tutorial/usage/#build-docs","title":"Build docs","text":"<p>Build docs site to <code>site</code> directory. This is useful for a CI flow.</p> <pre><code>$ make build\n</code></pre>"}]}